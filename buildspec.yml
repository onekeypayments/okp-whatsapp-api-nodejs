version: 0.2

phases:
  pre_build:
    commands:
      - echo Pre build...
      - export IMAGE_TAG=$(echo $CODEBUILD_WEBHOOK_TRIGGER | sed 's/.*\///')
      - echo $IMAGE_TAG
      - |
        if [ "$ENVIRONMENT" = "dev" ] || [ "$ENVIRONMENT" = "latest" ]; then
          IMAGE_TAG=latest
        else
          IMAGE_TAG=$(cat app/package.json | grep version | head -1 | awk -F: '{print $2}' | sed 's/[",[:space:]]//g')
        fi
      - echo Logging in to Amazon ECR account $AWS_ACCOUNT_ID region $AWS_DEFAULT_REGION ...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
  build:
    commands:
      - echo Build started on `date`
      - echo Building the docker image $IMAGE_TAG ...
      - docker build -t $REPOSITORY_URI:latest . -f Dockerfile
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build complete ...
      - echo Pushing the docker image $IMAGE_TAG ...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo Build completed image $IMAGE_TAG on `date`
artifacts:
  files:
    - imagedefinitions.json
